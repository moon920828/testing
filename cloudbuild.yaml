steps:
# - name: 'gcr.io/cloud-builders/gcloud'
#   entrypoint: 'bash'
#   args:
#     - '-c'
#     - |
#       chmod +x ./script.sh
#       ./script.sh

- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Authenticate to Google Cloud
      gcloud auth configure-docker us-docker.pkg.dev
      
      # Set multiple variables
      token=$(gcloud auth print-access-token) 
      project=$(gcloud config get-value project | head -n 1)
      region="us-central1"
      
      # Write variables to a file
      echo "token=${token}" >> /workspace/env_vars.txt
      echo "project=${project}" >> /workspace/env_vars.txt
      echo "region=${region}" >> /workspace/env_vars.txt

- name: 'us-docker.pkg.dev/appintegration-toolkit/images/integrationcli:latest'
  entrypoint: 'sh'
  args:
    - '-c'
    - |

      # token=$(gcloud auth print-access-token) 
      # project=$(gcloud config get-value project | head -n 1)
      # region=us-central1
      integrationcli prefs set -p "$project" -r "$region" -t "$token" 
      # Run the first integrationcli command
      integrationcli integrations list

# - name: 'gcr.io/cloud-builders/gcloud'
#   entrypoint: 'bash'
#   args:
#     - '-c'
#     - |
#       # Accessing Project ID and Region
#       echo "Project ID: ${PROJECT_ID}"
#       echo "Project Region: ${PROJECT_REGION}"

# - name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'bash'
#   args:
#     - '-c'
#     - |
#       docker pull us-docker.pkg.dev/appintegration-toolkit/images/integrationcli-builder

# - name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'bash'
#   args:
#     - '-c'
#     - |
#       docker run \
#         -v "$(pwd):/workspace" \
#         us-docker.pkg.dev/appintegration-toolkit/images/integrationcli-builder \
#         sh -c '
#           ls &&
#           token=$(gcloud auth print-access-token) &&
#           project=$(gcloud config get-value project | head -n 1) &&
#           region=us-central1 &&
#           integrationcli prefs set -p "$project" -r "$region" -t "$token" &&
#           integrationcli integrations list &&
#           integrationcli connectors list &&
#           integrationcli authconfigs list 
#         '

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET