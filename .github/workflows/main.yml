name: Gated Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        draft: true  # Create as draft for manual review

  wait-for-approval:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Create Approval Issue
      id: create_issue
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ISSUE_BODY="Please comment 'approve' to approve this release."
        ISSUE_TITLE="Release Approval Needed"
        RESPONSE=$(curl -s \
          -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -d "{\"title\": \"$ISSUE_TITLE\", \"body\": \"$ISSUE_BODY\"}" \
          https://api.github.com/repos/${{ github.repository }}/issues)
        echo "$RESPONSE" > issue.json
        echo "Created issue for approval. Issue details: $(cat issue.json)"
        ISSUE_NUMBER=$(echo "$RESPONSE" | jq '.number')
        echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV

  check-approval:
    runs-on: ubuntu-latest
    needs: wait-for-approval

    steps:
    - name: Check Approval
      id: check_approval
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ISSUE_NUMBER=${{ env.ISSUE_NUMBER }}
        COMMENTS_RESPONSE=$(curl -s \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER/comments)
        echo "$COMMENTS_RESPONSE" > comments.json
        if echo "$COMMENTS_RESPONSE" | jq -e '.[] | select(.body | test("approve"; "i"))' > /dev/null; then
          echo "Release approved."
        else
          echo "Release not approved."
          exit 1
        fi

  deploy:
    runs-on: ubuntu-latest
    needs: check-approval

    steps:
    - name: Deploy to Production
      if: success()
      run: |
        echo "Deploying to production..."
        # Example deployment command
        # npm run deploy:production